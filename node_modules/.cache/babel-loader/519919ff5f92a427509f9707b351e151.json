{"ast":null,"code":"var _jsxFileName = \"/Users/amaljose/MyOwn/PersonalProjects/Mashinga/src/SampleApp/Store/index.js\";\n\n/*\nTHIS FILE NEED NOT BE TOUCHED.\nTo add a segment, create segment folder and add details to storeList\n*/\nimport React, { createContext, useReducer } from \"react\";\nimport storeList from \"./storeList\";\n\nfunction getCombinedInitialState() {\n  let combinedInitialState = {};\n  Object.keys(storeList).forEach(storeSegmentName => {\n    combinedInitialState[storeSegmentName] = storeList[storeSegmentName].store;\n  });\n  return combinedInitialState;\n}\n\nfunction getCombinedReducer() {\n  let combinedReducer = (state, action) => {\n    return { ...state,\n      [action.segmentName]: storeList[action.segmentName].reducer(state[action.segmentName], action)\n    };\n  };\n\n  return combinedReducer;\n}\n\nexport const Context = createContext(getCombinedInitialState());\nexport const Provider = props => {\n  const [state, dispatch] = useReducer(getCombinedReducer(), getCombinedInitialState());\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/amaljose/MyOwn/PersonalProjects/Mashinga/src/SampleApp/Store/index.js"],"names":["React","createContext","useReducer","storeList","getCombinedInitialState","combinedInitialState","Object","keys","forEach","storeSegmentName","store","getCombinedReducer","combinedReducer","state","action","segmentName","reducer","Context","Provider","props","dispatch","children"],"mappings":";;AAAA;;;;AAIA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AACA,SAASC,uBAAT,GAAmC;AACjC,MAAIC,oBAAoB,GAAG,EAA3B;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,SAAZ,EAAuBK,OAAvB,CAAgCC,gBAAD,IAAsB;AACnDJ,IAAAA,oBAAoB,CAACI,gBAAD,CAApB,GAAyCN,SAAS,CAACM,gBAAD,CAAT,CAA4BC,KAArE;AACD,GAFD;AAGA,SAAOL,oBAAP;AACD;;AACD,SAASM,kBAAT,GAA8B;AAC5B,MAAIC,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,WAAO,EACL,GAAGD,KADE;AAEL,OAACC,MAAM,CAACC,WAAR,GAAsBZ,SAAS,CAACW,MAAM,CAACC,WAAR,CAAT,CAA8BC,OAA9B,CACpBH,KAAK,CAACC,MAAM,CAACC,WAAR,CADe,EAEpBD,MAFoB;AAFjB,KAAP;AAOD,GARD;;AASA,SAAOF,eAAP;AACD;;AACD,OAAO,MAAMK,OAAO,GAAGhB,aAAa,CAACG,uBAAuB,EAAxB,CAA7B;AACP,OAAO,MAAMc,QAAQ,GAAIC,KAAD,IAAW;AACjC,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBlB,UAAU,CAClCS,kBAAkB,EADgB,EAElCP,uBAAuB,EAFW,CAApC;AAIA,sBACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAF;AAASO,MAAAA;AAAT,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,QADT,CADF;AAKD,CAVM","sourcesContent":["/*\nTHIS FILE NEED NOT BE TOUCHED.\nTo add a segment, create segment folder and add details to storeList\n*/\nimport React, { createContext, useReducer } from \"react\";\nimport storeList from \"./storeList\";\nfunction getCombinedInitialState() {\n  let combinedInitialState = {};\n  Object.keys(storeList).forEach((storeSegmentName) => {\n    combinedInitialState[storeSegmentName] = storeList[storeSegmentName].store;\n  });\n  return combinedInitialState;\n}\nfunction getCombinedReducer() {\n  let combinedReducer = (state, action) => {\n    return {\n      ...state,\n      [action.segmentName]: storeList[action.segmentName].reducer(\n        state[action.segmentName],\n        action\n      ),\n    };\n  };\n  return combinedReducer;\n}\nexport const Context = createContext(getCombinedInitialState());\nexport const Provider = (props) => {\n  const [state, dispatch] = useReducer(\n    getCombinedReducer(),\n    getCombinedInitialState()\n  );\n  return (\n    <Context.Provider value={{ state, dispatch }}>\n      {props.children}\n    </Context.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}