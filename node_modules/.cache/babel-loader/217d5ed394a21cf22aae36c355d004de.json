{"ast":null,"code":"import APICaller, { POST } from \"../apiCaller\";\nimport SecureURLs from \"./urls\";\n\nfunction verifyToken(token) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      reject({\n        role: \"unauthorised\"\n      });\n    }, 500);\n  });\n  return APICaller(POST, SecureURLs.verify, {\n    token\n  });\n}\n\nfunction login(email, password) {\n  return APICaller(POST, SecureURLs.login, {\n    email,\n    password\n  });\n}\n\nfunction signUp(user) {\n  return APICaller(POST, SecureURLs.signup, user);\n}\n\nconst SecureService = {\n  verifyToken,\n  login,\n  signUp\n};\nexport default SecureService;","map":{"version":3,"sources":["/Users/amaljose/MyOwn/PersonalProjects/Mashinga/src/Mashinga/services/Secure/index.js"],"names":["APICaller","POST","SecureURLs","verifyToken","token","Promise","resolve","reject","setTimeout","role","verify","login","email","password","signUp","user","signup","SecureService"],"mappings":"AAAA,OAAOA,SAAP,IAAoBC,IAApB,QAAgC,cAAhC;AACA,OAAOC,UAAP,MAAuB,QAAvB;;AACA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;AACnCC,IAAAA,UAAU,CAAC,MAAI;AACbD,MAAAA,MAAM,CAAC;AACLE,QAAAA,IAAI,EAAC;AADA,OAAD,CAAN;AAGD,KAJS,EAIR,GAJQ,CAAV;AAMD,GAPM,CAAP;AAQA,SAAOT,SAAS,CAACC,IAAD,EAAOC,UAAU,CAACQ,MAAlB,EAA0B;AAAEN,IAAAA;AAAF,GAA1B,CAAhB;AACD;;AACD,SAASO,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAAgC;AAC9B,SAAOb,SAAS,CAACC,IAAD,EAAOC,UAAU,CAACS,KAAlB,EAAyB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAzB,CAAhB;AACD;;AACD,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,SAAOf,SAAS,CAACC,IAAD,EAAOC,UAAU,CAACc,MAAlB,EAA0BD,IAA1B,CAAhB;AACD;;AACD,MAAME,aAAa,GAAG;AACpBd,EAAAA,WADoB;AAEpBQ,EAAAA,KAFoB;AAGpBG,EAAAA;AAHoB,CAAtB;AAKA,eAAeG,aAAf","sourcesContent":["import APICaller, { POST } from \"../apiCaller\";\nimport SecureURLs from \"./urls\";\nfunction verifyToken(token) {\n  return new Promise((resolve,reject)=>{\n    setTimeout(()=>{\n      reject({\n        role:\"unauthorised\"\n      })\n    },500)\n   \n  })\n  return APICaller(POST, SecureURLs.verify, { token });\n}\nfunction login(email, password) {\n  return APICaller(POST, SecureURLs.login, { email, password });\n}\nfunction signUp(user) {\n  return APICaller(POST, SecureURLs.signup, user);\n}\nconst SecureService = {\n  verifyToken,\n  login,\n  signUp\n};\nexport default SecureService;\n"]},"metadata":{},"sourceType":"module"}